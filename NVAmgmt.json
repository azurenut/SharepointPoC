{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "vsecVersion": {
          "type": "string",
          "allowedValues": [
              "R80.10 - Pay As You Go (MGMT5)"
          ],
          "defaultValue": "R80.10 - Pay As You Go (MGMT5)",
          "metadata": {
              "description": "Version of Check Point vSEC"
          }
      },
      "adminPassword": {
          "type": "string",
          "metadata": {
              "description": "Administrator password"
          }
      },
      "authenticationType": {
          "type": "string",
          "allowedValues": [
              "password",
              "sshPublicKey"
          ],
          "defaultValue": "password",
          "metadata": {
              "description": "Authentication type"
          }
      },
      "location" : {
        "type": "string"
       },
       "locationcode" : {
        "type": "string"
       },
      "vnetRG": {
        "type": "string"
      },
      "vnetName": {
        "type": "string"
  
      },
      "nvacpmgmtIP" :{
        "type": "string"
      },
      "sicKey" :{
        "type": "string"
      },
           
     "SubnetName": {
        "type": "string"
      },
      "sshPublicKey": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
            "description": "Administrator SSH public key"
        }
    },
      
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_D2_v2",
        "metadata": {
            "description": "Size of the VM"
        }
    },
      "installationType": {
          "type": "string",
          "metadata": {
              "description": "Installation Type"
          },
          "defaultValue": "management",
          "allowedValues": [
              "management",
              "custom"
          ]
      },
      "baseUrl": {
          "type": "string",
          "metadata": {
              "artifactsBaseUrl": ""
          },
          "defaultValue": "https://gallery.azure.com/artifact/20151001/checkpoint.vsecmanagement.1.0.1/Artifacts"
      },
      "bootstrapScript": {
          "type": "string",
          "metadata": {
              "description": "Bootstrap script"
          },
          "defaultValue": ""
      },
      "allowDownloadFromUploadToCheckPoint": {
          "type": "string",
          "allowedValues": [
              "true",
              "false"
          ],
          "defaultValue": "true",
          "metadata": {
              "description": "Automatically download Blade Contracts and other important data. Improve product experience by sending data to Check Point"
          }
      },
      "diskType": {
          "type": "string",
          "defaultValue": "Standard_LRS",
          "metadata": {
              "description": "The type of the OS disk. Premium is applicable only to DS machine sizes"
          },
          "allowedValues": [
              "Standard_LRS",
              "Premium_LRS"
          ]
      }
  },
  "variables": {
      "templateName": "management",
      "templateVersion": "20170717",
      "vmName" : "[concat('a',parameters('locationcode'),'wcpmgmt01')]",
      "vnetID": "[resourceId(parameters('vnetRG'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('SubnetName'))]",
      "location": "[parameters('location')]",
      "imageOffer": "[variables(concat('imageOffer', variables('osVersion')))]",
      "imagePublisher": "checkpoint",
      "imageReferenceBYOL": {
        "offer": "[variables('imageOffer')]",
        "publisher": "[variables('imagePublisher')]",
        "sku": "sg-ngtp",
        "version": "latest"
       },
       "imageReferenceMGMT5": {
        "offer": "[variables('imageOffer')]",
        "publisher": "[variables('imagePublisher')]",
        "sku": "sg-ngtp",
        "version": "latest"
    },
    "imageOfferR7730": "check-point-r77-10",
    "imageOfferR8010": "check-point-vsec-r80",
      "offers": {
          "R77.30 - Bring Your Own Licence": "BYOL",
          "R80.10 - Bring Your Own Licence": "BYOL",
          "R80.10 - Pay As You Go (MGMT5)": "MGMT5"
      },
      "offer": "[variables('offers')[parameters('vsecVersion')]]",
      "osVersions": {
          "R77.30 - Bring Your Own Licence": "R7730",
          "R80.10 - Bring Your Own Licence": "R8010",
          "R80.10 - Pay As You Go (MGMT5)": "R8010"
      },
      "planBYOL": {
        "name": "sg-byol",
        "product": "[variables('imageOffer')]",
        "publisher": "[variables('imagePublisher')]"
    },
    "planMGMT5": {
        "name": "sg-ngtp",
        "product": "[variables('imageOffer')]",
        "publisher": "[variables('imagePublisher')]"
    },
      "osVersion": "[variables('osVersions')[parameters('vsecVersion')]]",
      "storageAccountType": "Standard_LRS",
      "diskSizeGB": "100",
      "managementGUIClientNetwork" : "0.0.0.0/0",
      "customData": "[concat('#!/bin/bash\n', '\n', 'installationType=\"', variables('installationType'), '\"', '\n', 'allowUploadDownload=\"', variables('allowUploadDownload'), '\"', '\n', 'osVersion=\"', variables('osVersion'), '\"', '\n', 'templateName=\"', variables('templateName'), '\"', '\n', 'templateVersion=\"', variables('templateVersion'), '\"', '\n', '\n', 'echo \"template_name: $templateName\" >> /etc/cloud-version\n', 'echo \"template_version: $templateVersion\" >> /etc/cloud-version\n', '\n', 'bootstrap=\"$(dirname \"$0\")/bootstrap\"\n', 'cat <<<\"', variables('bootstrapScript64'), '\" | tr -d \"\\n\" | base64 -d  >\"$bootstrap\"', '\n', 'dos2unix \"$bootstrap\"\n', 'chmod +x \"$bootstrap\"\n', '\"$bootstrap\"\n', '\n', 'function cluster {\n', '    subscriptionId=\"', subscription().subscriptionId, '\"', '\n', '    tenantId=\"', subscription().tenantId, '\"', '\n', '    resourceGroup=\"', resourceGroup().name, '\"', '\n', '    virtualNetwork=\"', parameters('vnetName'), '\"', '\n', '    clusterName=\"', variables('vmName'), '\"', '\n', '    lbName=\"frontend-lb\"\n', '    location=\"', variables('location'), '\"', '\n', '\n', '    case \"$location\" in\n', '    usgov*)\n', '        environment=\"AzureUSGovernment\"\n', '        ;;\n', '    china*)\n', '        environment=\"AzureChinaCloud\"\n', '        ;;\n', '    germany*)\n', '        environment=\"AzureGermanCloud\"\n', '        ;;\n', '    *)\n', '        environment=\"AzureCloud\"\n', '        ;;\n', '    esac\n', '\n', '    cat <<EOF >\"$FWDIR/conf/azure-ha.json\"\n', '{\n', '  \"debug\": false,\n', '  \"subscriptionId\": \"$subscriptionId\",\n', '  \"location\": \"$location\",\n', '  \"environment\": \"$environment\",\n', '  \"resourceGroup\": \"$resourceGroup\",\n', '  \"credentials\": {\n', '    \"tenant\": \"$tenantId\",\n', '    \"grant_type\": \"client_credentials\",\n', '    \"client_id\": \"\",\n', '    \"client_secret\": \"\"\n', '  },\n', '  \"proxy\": \"\",\n', '  \"virtualNetwork\": \"$virtualNetwork\",\n', '  \"clusterName\": \"$clusterName\",\n', '  \"lbName\": \"$lbName\"\n', '}\n', 'EOF\n', '}\n', '\n', '\n', 'case \"$installationType\" in\n', 'gateway)\n', '    installSecurityGateway=true\n', '    gateway_cluster_member=false\n', '    installSecurityManagement=false\n', '    sicKey=\"', variables('sicKey'), '\"', '\n', '    ;;\n', 'cluster)\n', '    installSecurityGateway=true\n', '    gateway_cluster_member=true\n', '    installSecurityManagement=false\n', '    sicKey=\"', variables('sicKey'), '\"', '\n', '    cluster\n', '    ;;\n', 'vmss)\n', '    installSecurityGateway=true\n', '    gateway_cluster_member=false\n', '    installSecurityManagement=false\n', '    sicKey=\"', variables('sicKey'), '\"', '\n', '    ;;\n', 'management)\n', '    installSecurityGateway=false\n', '    installSecurityManagement=true\n', '    sicKey=notused\n', '    ;;\n', 'custom)\n', '    exit 0\n', '    ;;\n', 'standalone | *)\n', '    installSecurityGateway=true\n', '    installSecurityManagement=true\n', '    gateway_cluster_member=false\n', '    sicKey=notused\n', '    ;;\n', 'esac\n', '\n', 'conf=\"install_security_gw=$installSecurityGateway\"\n', 'if \"$installSecurityGateway\"; then\n', '    conf=\"${conf}&install_ppak=true\"\n', '    conf=\"${conf}&gateway_cluster_member=$gateway_cluster_member\"\n', 'fi\n', 'conf=\"${conf}&install_security_managment=$installSecurityManagement\"\n', 'if \"$installSecurityManagement\"; then\n', '    if [ \"R7730\" == \"$osVersion\" ]; then\n', '        managementAdminPassword=\"$(dd if=/dev/urandom count=1 2>/dev/null | sha1sum | cut -c -28)\"\n', '        conf=\"${conf}&mgmt_admin_name=admin\"\n', '        conf=\"${conf}&mgmt_admin_passwd=${managementAdminPassword}\"\n', '    else\n', '        conf=\"${conf}&mgmt_admin_radio=gaia_admin\"\n', '    fi\n', '\n', '    managementGUIClientNetwork=\"', variables('managementGUIClientNetwork'), '\"', '\n', '    ManagementGUIClientBase=\"$(echo \"$managementGUIClientNetwork\" | cut -d / -f 1)\"\n', '    ManagementGUIClientMaskLength=\"$(echo \"$managementGUIClientNetwork\" | cut -d / -f 2)\"\n', '\n', '    conf=\"${conf}&install_mgmt_secondary=true\"\n', '    conf=\"${conf}&mgmt_gui_clients_radio=network\"\n', '    conf=\"${conf}&mgmt_gui_clients_ip_field=$ManagementGUIClientBase\"\n', '    conf=\"${conf}&mgmt_gui_clients_subnet_field=$ManagementGUIClientMaskLength\"\n', 'fi\n', 'conf=\"${conf}&ftw_sic_key=$sicKey\"\n', '\n', 'conf=\"${conf}&download_info=$allowUploadDownload\"\n', 'conf=\"${conf}&upload_info=$allowUploadDownload\"\n', '\n', 'config_system -s \"$conf\"\n', '\n', 'if \"$installSecurityManagement\" && [ \"R7730\" != \"$osVersion\" ]; then\n', '    chkconfig --add autoprovision\n', 'fi\n', '\n', 'if [ \"vmss\" == \"$installationType\" ]; then\n', '    addr=\"$(ip addr show dev eth0 | awk \"/inet/{print \\$2; exit}\" | cut -d / -f 1)\"\n', '    dynamic_objects -n LocalGateway -r \"$addr\" \"$addr\" -a\n', 'fi\n', '\n', 'if \"$installSecurityGateway\"; then\n', '    shutdown -r now\n', 'else\n', '    if \"$installSecurityManagement\" && [ \"R7730\" != \"$osVersion\" ]; then\n', '        service autoprovision start\n', '    fi\n', 'fi\n')]",
      "imageReference": "[variables(concat('imageReference', variables('offer')))]",
      "nic1Name": "[concat(variables('vmName'),'nic01')]",
      "linuxConfiguration": "[variables(concat('linuxConfiguration',parameters('authenticationType')))]",
      "plan": "[variables(concat('plan', variables('offer')))]",
      "linuxConfigurationpassword": {},
      "linuxConfigurationsshPublicKey": {
          "disablePasswordAuthentication": "true",
          "ssh": {
              "publicKeys": [
                  {
                      "keyData": "[parameters('sshPublicKey')]",
                      "path": "/home/notused/.ssh/authorized_keys"
                  }
              ]
          }
      },
      
      "bootstrapScript64": "[base64(parameters('bootstrapScript'))]",
      "allowUploadDownload": "[parameters('allowDownloadFromUploadToCheckPoint')]",
      "sicKey": "[parameters('sicKey')]",
      "installationType": "[parameters('installationType')]",
      "storageaccountName" : "[concat('actaz',parameters('locationcode'),'ipinfstr04')]"
  },
  "resources": [
      {
          "type": "Microsoft.Storage/storageAccounts",
          "name": "[variables('storageAccountName')]",
          "apiVersion": "[providers('Microsoft.Storage','storageAccounts').apiVersions[0]]",
          "location": "[variables('location')]",
          "tags": {
            "resourcename" : "[variables('storageAccountName')]",
            "tier" : "Microsoft.Storage/storageAccounts",
            "lifecycle" : "production",
            "dataclassification" : "",
            "costcenter" : "",
            "businessregion" : "eu",
            "cloudregion" : "[parameters('location')]",
            "company" : "Realex",
            "organization" : "bts.ireland"
          },
          "sku": {
              "name": "[variables('storageAccountType')]"
          },
          "kind": "Storage"
         
      },
      
      {
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "[providers('Microsoft.Network','networkInterfaces').apiVersions[0]]",
          
          "location": "[variables('location')]",
          "tags": {
            "resourcename" : "[variables('nic1Name')]",
            "tier" : "Microsoft.Network/networkInterfaces",
            "lifecycle" : "production",
            "dataclassification" : "",
            "costcenter" : "",
            "businessregion" : "eu",
            "cloudregion" : "[parameters('location')]",
            "company" : "Realex",
            "organization" : "bts.ireland"
          },
          "name": "[variables('nic1Name')]",
          "properties": {
              "enableIPForwarding": false,
              
              "ipConfigurations": [
                  {
                      "name": "ipconfig1",
                      "properties": {
                          "privateIPAddress": "[parameters('nvacpmgmtIP')]",
                          "privateIPAllocationMethod": "Static",
                          
                          "subnet": {
                              "id": "[variables('subnetRef')]"
                          }
                      }
                  }
              ]
          }
          
      },
      {
          "type": "Microsoft.Compute/virtualMachines",
          "apiVersion": "[providers('Microsoft.Compute','virtualMachines').apiVersions[0]]",
          "dependsOn": [
              "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
              "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]"
          ],
          "location": "[variables('location')]",
          "tags": {
            "resourcename" : "[variables('vmName')]",
            "tier" : "Microsoft.Compute/virtualMachines",
            "lifecycle" : "production",
            "dataclassification" : "",
            "costcenter" : "",
            "businessregion" : "eu",
            "cloudregion" : "[parameters('location')]",
            "company" : "Realex",
            "organization" : "bts.ireland"
          },
          "name": "[variables('vmName')]",
          "plan": "[variables('plan')]",
          "properties": {
              "diagnosticsProfile": {
                  "bootDiagnostics": {
                      "enabled": "true",
                      "storageUri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net')]"
                  }
              },
              "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
              },
              "networkProfile": {
                  "networkInterfaces": [
                      {
                          "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
                          "properties": {
                              "primary": true
                          }
                      }
                  ]
              },
              "osProfile": {
                  "adminPassword": "[parameters('adminPassword')]",
                  "adminUsername": "notused",
                  "computerName": "[toLower(variables('vmName'))]",
                  "customData": "[base64(variables('customData'))]",
                  "linuxConfiguration": "[variables('linuxConfiguration')]"
              },
              "storageProfile": {
                  "imageReference": "[variables('imageReference')]",
                  "osDisk": {
                      "caching": "ReadWrite",
                      "createOption": "FromImage",
                      "diskSizeGB": "[variables('diskSizeGB')]",
                      "name": "[concat(variables('vmName'),'os')]",
                      "managedDisk": {
                          "storageAccountType": "[parameters('diskType')]"
                      }
                  }
              }
          }
          
      }
     
  ],
  "outputs": {
     
  }
}